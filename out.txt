Ok(
    Class {
        version: ClassVersion {
            minor_version: 0,
            major_version: 61,
        },
        constants: [
            MethodRef {
                class: "java/lang/Object",
                name: "<init>",
                method_type: "()V",
            },
            ClassRef(
                "java/lang/Object",
            ),
            NameTypeDescriptor {
                name: "<init>",
                type_descriptor: "()V",
            },
            String(
                "java/lang/Object",
            ),
            String(
                "<init>",
            ),
            String(
                "()V",
            ),
            FieldRef {
                class: "DrunkBottlesOfBeerOnTheWall",
                name: "beersDrank",
                field_type: "I",
            },
            ClassRef(
                "DrunkBottlesOfBeerOnTheWall",
            ),
            NameTypeDescriptor {
                name: "beersDrank",
                type_descriptor: "I",
            },
            String(
                "DrunkBottlesOfBeerOnTheWall",
            ),
            String(
                "beersDrank",
            ),
            String(
                "I",
            ),
            FieldRef {
                class: "DrunkBottlesOfBeerOnTheWall",
                name: "PEOPLE_IN_DRINKING_GROUP",
                field_type: "I",
            },
            NameTypeDescriptor {
                name: "PEOPLE_IN_DRINKING_GROUP",
                type_descriptor: "I",
            },
            String(
                "PEOPLE_IN_DRINKING_GROUP",
            ),
            MethodRef {
                class: "DrunkBottlesOfBeerOnTheWall",
                name: "<init>",
                method_type: "()V",
            },
            MethodRef {
                class: "DrunkBottlesOfBeerOnTheWall",
                name: "printLinesOfBeer",
                method_type: "(I)V",
            },
            NameTypeDescriptor {
                name: "printLinesOfBeer",
                type_descriptor: "(I)V",
            },
            String(
                "printLinesOfBeer",
            ),
            String(
                "(I)V",
            ),
            StringRef(
                "No bottles of beer on the wall,",
            ),
            String(
                "No bottles of beer on the wall,",
            ),
            MethodRef {
                class: "DrunkBottlesOfBeerOnTheWall",
                name: "printBeerLine",
                method_type: "(Ljava/lang/String;)V",
            },
            NameTypeDescriptor {
                name: "printBeerLine",
                type_descriptor: "(Ljava/lang/String;)V",
            },
            String(
                "printBeerLine",
            ),
            String(
                "(Ljava/lang/String;)V",
            ),
            StringRef(
                "no bottles of beer,",
            ),
            String(
                "no bottles of beer,",
            ),
            StringRef(
                "ya' can't take one down, ya' can't pass it around,",
            ),
            String(
                "ya' can't take one down, ya' can't pass it around,",
            ),
            StringRef(
                "'cause there are no more bottles of beer on the wall\n",
            ),
            String(
                "'cause there are no more bottles of beer on the wall\n",
            ),
            InvokeDynamic {
                bootstrap_index: 0,
                name_type_index: 34,
            },
            NameTypeDescriptor {
                name: "makeConcatWithConstants",
                type_descriptor: "(I)Ljava/lang/String;",
            },
            String(
                "makeConcatWithConstants",
            ),
            String(
                "(I)Ljava/lang/String;",
            ),
            InvokeDynamic {
                bootstrap_index: 1,
                name_type_index: 34,
            },
            StringRef(
                "ya' take one down, ya' pass it around,",
            ),
            String(
                "ya' take one down, ya' pass it around,",
            ),
            StringRef(
                "no more bottles of beer on the wall\n",
            ),
            String(
                "no more bottles of beer on the wall\n",
            ),
            FieldRef {
                class: "java/lang/System",
                name: "out",
                field_type: "Ljava/io/PrintStream;",
            },
            ClassRef(
                "java/lang/System",
            ),
            NameTypeDescriptor {
                name: "out",
                type_descriptor: "Ljava/io/PrintStream;",
            },
            String(
                "java/lang/System",
            ),
            String(
                "out",
            ),
            String(
                "Ljava/io/PrintStream;",
            ),
            MethodRef {
                class: "java/io/PrintStream",
                name: "println",
                method_type: "()V",
            },
            ClassRef(
                "java/io/PrintStream",
            ),
            NameTypeDescriptor {
                name: "println",
                type_descriptor: "()V",
            },
            String(
                "java/io/PrintStream",
            ),
            String(
                "println",
            ),
            InvokeDynamic {
                bootstrap_index: 2,
                name_type_index: 34,
            },
            InvokeDynamic {
                bootstrap_index: 3,
                name_type_index: 34,
            },
            InvokeDynamic {
                bootstrap_index: 4,
                name_type_index: 34,
            },
            MethodRef {
                class: "DrunkBottlesOfBeerOnTheWall",
                name: "swapTwoLetters",
                method_type: "(Ljava/lang/String;)Ljava/lang/String;",
            },
            NameTypeDescriptor {
                name: "swapTwoLetters",
                type_descriptor: "(Ljava/lang/String;)Ljava/lang/String;",
            },
            String(
                "swapTwoLetters",
            ),
            String(
                "(Ljava/lang/String;)Ljava/lang/String;",
            ),
            MethodRef {
                class: "java/io/PrintStream",
                name: "println",
                method_type: "(Ljava/lang/String;)V",
            },
            NameTypeDescriptor {
                name: "println",
                type_descriptor: "(Ljava/lang/String;)V",
            },
            MethodRef {
                class: "java/lang/String",
                name: "length",
                method_type: "()I",
            },
            ClassRef(
                "java/lang/String",
            ),
            NameTypeDescriptor {
                name: "length",
                type_descriptor: "()I",
            },
            String(
                "java/lang/String",
            ),
            String(
                "length",
            ),
            String(
                "()I",
            ),
            ClassRef(
                "java/util/Random",
            ),
            String(
                "java/util/Random",
            ),
            MethodRef {
                class: "java/util/Random",
                name: "<init>",
                method_type: "()V",
            },
            MethodRef {
                class: "java/util/Random",
                name: "nextInt",
                method_type: "(I)I",
            },
            NameTypeDescriptor {
                name: "nextInt",
                type_descriptor: "(I)I",
            },
            String(
                "nextInt",
            ),
            String(
                "(I)I",
            ),
            ClassRef(
                "java/lang/StringBuilder",
            ),
            String(
                "java/lang/StringBuilder",
            ),
            MethodRef {
                class: "java/lang/StringBuilder",
                name: "<init>",
                method_type: "(Ljava/lang/String;)V",
            },
            NameTypeDescriptor {
                name: "<init>",
                type_descriptor: "(Ljava/lang/String;)V",
            },
            MethodRef {
                class: "java/lang/String",
                name: "charAt",
                method_type: "(I)C",
            },
            NameTypeDescriptor {
                name: "charAt",
                type_descriptor: "(I)C",
            },
            String(
                "charAt",
            ),
            String(
                "(I)C",
            ),
            MethodRef {
                class: "java/lang/StringBuilder",
                name: "setCharAt",
                method_type: "(IC)V",
            },
            NameTypeDescriptor {
                name: "setCharAt",
                type_descriptor: "(IC)V",
            },
            String(
                "setCharAt",
            ),
            String(
                "(IC)V",
            ),
            MethodRef {
                class: "java/lang/StringBuilder",
                name: "toString",
                method_type: "()Ljava/lang/String;",
            },
            NameTypeDescriptor {
                name: "toString",
                type_descriptor: "()Ljava/lang/String;",
            },
            String(
                "toString",
            ),
            String(
                "()Ljava/lang/String;",
            ),
            String(
                "ConstantValue",
            ),
            Int(
                10,
            ),
            String(
                "Code",
            ),
            String(
                "LineNumberTable",
            ),
            String(
                "main",
            ),
            String(
                "([Ljava/lang/String;)V",
            ),
            String(
                "StackMapTable",
            ),
            String(
                "SourceFile",
            ),
            String(
                "DrunkBottlesOfBeerOnTheWall.java",
            ),
            String(
                "BootstrapMethods",
            ),
            MethodHandle {
                descriptor: 6,
                index: 102,
            },
            MethodRef {
                class: "java/lang/invoke/StringConcatFactory",
                name: "makeConcatWithConstants",
                method_type: "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;",
            },
            ClassRef(
                "java/lang/invoke/StringConcatFactory",
            ),
            NameTypeDescriptor {
                name: "makeConcatWithConstants",
                type_descriptor: "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;",
            },
            String(
                "java/lang/invoke/StringConcatFactory",
            ),
            String(
                "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;",
            ),
            StringRef(
                "\u{1} bottle of beer on the wall,",
            ),
            String(
                "\u{1} bottle of beer on the wall,",
            ),
            StringRef(
                "\u{1} bottle of beer,",
            ),
            String(
                "\u{1} bottle of beer,",
            ),
            StringRef(
                "\u{1} bottles of beer on the wall,",
            ),
            String(
                "\u{1} bottles of beer on the wall,",
            ),
            StringRef(
                "\u{1} bottles of beer,",
            ),
            String(
                "\u{1} bottles of beer,",
            ),
            StringRef(
                "\u{1} bottles of beer on the wall\n",
            ),
            String(
                "\u{1} bottles of beer on the wall\n",
            ),
            String(
                "InnerClasses",
            ),
            ClassRef(
                "java/lang/invoke/MethodHandles$Lookup",
            ),
            String(
                "java/lang/invoke/MethodHandles$Lookup",
            ),
            ClassRef(
                "java/lang/invoke/MethodHandles",
            ),
            String(
                "java/lang/invoke/MethodHandles",
            ),
            String(
                "Lookup",
            ),
        ],
        access: AccessFlags(
            33,
        ),
        this: "DrunkBottlesOfBeerOnTheWall",
        super_class: "java/lang/Object",
        interfaces: [],
        fields: [
            Field {
                access_flags: AccessFlags(
                    0,
                ),
                name: "beersDrank",
                descriptor: "I",
                attributes: [],
                constant_value: None,
            },
            Field {
                access_flags: AccessFlags(
                    16,
                ),
                name: "PEOPLE_IN_DRINKING_GROUP",
                descriptor: "I",
                attributes: [
                    Attribute {
                        name: "ConstantValue",
                        data: [
                            0,
                            92,
                        ],
                    },
                ],
                constant_value: None,
            },
        ],
        methods: [
            Method {
                access_flags: AccessFlags(
                    1,
                ),
                name: "<init>",
                descriptor: "()V",
                attributes: [],
                code: Some(
                    Code {
                        max_stack: 2,
                        max_locals: 1,
                        code: [
                            42,
                            183,
                            0,
                            1,
                            42,
                            3,
                            181,
                            0,
                            7,
                            42,
                            16,
                            10,
                            181,
                            0,
                            13,
                            177,
                        ],
                        exception_table: [],
                        attributes: [
                            Attribute {
                                name: "LineNumberTable",
                                data: [
                                    0,
                                    3,
                                    0,
                                    0,
                                    0,
                                    3,
                                    0,
                                    4,
                                    0,
                                    4,
                                    0,
                                    9,
                                    0,
                                    7,
                                ],
                            },
                        ],
                        stack_map: [],
                    },
                ),
            },
            Method {
                access_flags: AccessFlags(
                    9,
                ),
                name: "main",
                descriptor: "([Ljava/lang/String;)V",
                attributes: [],
                code: Some(
                    Code {
                        max_stack: 2,
                        max_locals: 2,
                        code: [
                            187,
                            0,
                            8,
                            89,
                            183,
                            0,
                            16,
                            76,
                            43,
                            16,
                            99,
                            182,
                            0,
                            17,
                            177,
                        ],
                        exception_table: [],
                        attributes: [
                            Attribute {
                                name: "LineNumberTable",
                                data: [
                                    0,
                                    3,
                                    0,
                                    0,
                                    0,
                                    11,
                                    0,
                                    8,
                                    0,
                                    13,
                                    0,
                                    14,
                                    0,
                                    14,
                                ],
                            },
                        ],
                        stack_map: [],
                    },
                ),
            },
            Method {
                access_flags: AccessFlags(
                    1,
                ),
                name: "printLinesOfBeer",
                descriptor: "(I)V",
                attributes: [],
                code: Some(
                    Code {
                        max_stack: 3,
                        max_locals: 2,
                        code: [
                            27,
                            157,
                            0,
                            30,
                            42,
                            18,
                            21,
                            182,
                            0,
                            23,
                            42,
                            18,
                            27,
                            182,
                            0,
                            23,
                            42,
                            18,
                            29,
                            182,
                            0,
                            23,
                            42,
                            18,
                            31,
                            182,
                            0,
                            23,
                            167,
                            0,
                            121,
                            27,
                            4,
                            160,
                            0,
                            55,
                            42,
                            27,
                            186,
                            0,
                            33,
                            0,
                            0,
                            182,
                            0,
                            23,
                            42,
                            27,
                            186,
                            0,
                            37,
                            0,
                            0,
                            182,
                            0,
                            23,
                            42,
                            18,
                            38,
                            182,
                            0,
                            23,
                            42,
                            89,
                            180,
                            0,
                            7,
                            4,
                            96,
                            181,
                            0,
                            7,
                            42,
                            18,
                            40,
                            182,
                            0,
                            23,
                            42,
                            27,
                            4,
                            100,
                            182,
                            0,
                            17,
                            167,
                            0,
                            64,
                            178,
                            0,
                            42,
                            182,
                            0,
                            48,
                            42,
                            27,
                            186,
                            0,
                            53,
                            0,
                            0,
                            182,
                            0,
                            23,
                            42,
                            27,
                            186,
                            0,
                            54,
                            0,
                            0,
                            182,
                            0,
                            23,
                            42,
                            18,
                            38,
                            182,
                            0,
                            23,
                            42,
                            89,
                            180,
                            0,
                            7,
                            4,
                            96,
                            181,
                            0,
                            7,
                            42,
                            27,
                            4,
                            100,
                            186,
                            0,
                            55,
                            0,
                            0,
                            182,
                            0,
                            23,
                            42,
                            27,
                            4,
                            100,
                            182,
                            0,
                            17,
                            177,
                        ],
                        exception_table: [],
                        attributes: [
                            Attribute {
                                name: "LineNumberTable",
                                data: [
                                    0,
                                    20,
                                    0,
                                    0,
                                    0,
                                    18,
                                    0,
                                    4,
                                    0,
                                    20,
                                    0,
                                    10,
                                    0,
                                    21,
                                    0,
                                    16,
                                    0,
                                    22,
                                    0,
                                    22,
                                    0,
                                    23,
                                    0,
                                    31,
                                    0,
                                    25,
                                    0,
                                    36,
                                    0,
                                    27,
                                    0,
                                    46,
                                    0,
                                    28,
                                    0,
                                    56,
                                    0,
                                    29,
                                    0,
                                    62,
                                    0,
                                    30,
                                    0,
                                    72,
                                    0,
                                    31,
                                    0,
                                    78,
                                    0,
                                    32,
                                    0,
                                    88,
                                    0,
                                    34,
                                    0,
                                    94,
                                    0,
                                    35,
                                    0,
                                    104,
                                    0,
                                    36,
                                    0,
                                    114,
                                    0,
                                    37,
                                    0,
                                    120,
                                    0,
                                    38,
                                    0,
                                    130,
                                    0,
                                    39,
                                    0,
                                    142,
                                    0,
                                    40,
                                    0,
                                    149,
                                    0,
                                    42,
                                ],
                            },
                        ],
                        stack_map: [
                            Same {
                                offset_delta: 31,
                            },
                            Same {
                                offset_delta: 56,
                            },
                            Same {
                                offset_delta: 60,
                            },
                        ],
                    },
                ),
            },
            Method {
                access_flags: AccessFlags(
                    1,
                ),
                name: "printBeerLine",
                descriptor: "(Ljava/lang/String;)V",
                attributes: [],
                code: Some(
                    Code {
                        max_stack: 3,
                        max_locals: 3,
                        code: [
                            3,
                            61,
                            28,
                            42,
                            180,
                            0,
                            7,
                            16,
                            10,
                            108,
                            162,
                            0,
                            14,
                            43,
                            184,
                            0,
                            56,
                            76,
                            132,
                            2,
                            1,
                            167,
                            255,
                            237,
                            178,
                            0,
                            42,
                            43,
                            182,
                            0,
                            60,
                            177,
                        ],
                        exception_table: [],
                        attributes: [
                            Attribute {
                                name: "LineNumberTable",
                                data: [
                                    0,
                                    6,
                                    0,
                                    0,
                                    0,
                                    45,
                                    0,
                                    2,
                                    0,
                                    47,
                                    0,
                                    13,
                                    0,
                                    48,
                                    0,
                                    18,
                                    0,
                                    49,
                                    0,
                                    24,
                                    0,
                                    51,
                                    0,
                                    31,
                                    0,
                                    52,
                                ],
                            },
                        ],
                        stack_map: [
                            Append {
                                offset_delta: 2,
                                locals: [
                                    Integer,
                                ],
                            },
                            Same {
                                offset_delta: 21,
                            },
                        ],
                    },
                ),
            },
            Method {
                access_flags: AccessFlags(
                    9,
                ),
                name: "swapTwoLetters",
                descriptor: "(Ljava/lang/String;)Ljava/lang/String;",
                attributes: [],
                code: Some(
                    Code {
                        max_stack: 4,
                        max_locals: 6,
                        code: [
                            42,
                            182,
                            0,
                            62,
                            60,
                            187,
                            0,
                            68,
                            89,
                            183,
                            0,
                            70,
                            77,
                            3,
                            62,
                            3,
                            54,
                            4,
                            27,
                            5,
                            161,
                            0,
                            25,
                            29,
                            21,
                            4,
                            160,
                            0,
                            19,
                            44,
                            27,
                            182,
                            0,
                            71,
                            62,
                            44,
                            27,
                            182,
                            0,
                            71,
                            54,
                            4,
                            167,
                            255,
                            232,
                            187,
                            0,
                            75,
                            89,
                            42,
                            183,
                            0,
                            77,
                            58,
                            5,
                            25,
                            5,
                            29,
                            42,
                            21,
                            4,
                            182,
                            0,
                            79,
                            182,
                            0,
                            83,
                            25,
                            5,
                            21,
                            4,
                            42,
                            29,
                            182,
                            0,
                            79,
                            182,
                            0,
                            83,
                            25,
                            5,
                            182,
                            0,
                            87,
                            176,
                        ],
                        exception_table: [],
                        attributes: [
                            Attribute {
                                name: "LineNumberTable",
                                data: [
                                    0,
                                    10,
                                    0,
                                    0,
                                    0,
                                    55,
                                    0,
                                    5,
                                    0,
                                    56,
                                    0,
                                    13,
                                    0,
                                    57,
                                    0,
                                    18,
                                    0,
                                    60,
                                    0,
                                    29,
                                    0,
                                    61,
                                    0,
                                    35,
                                    0,
                                    62,
                                    0,
                                    45,
                                    0,
                                    66,
                                    0,
                                    55,
                                    0,
                                    67,
                                    0,
                                    67,
                                    0,
                                    68,
                                    0,
                                    79,
                                    0,
                                    70,
                                ],
                            },
                        ],
                        stack_map: [
                            Full {
                                offset_delta: 18,
                                locals: [
                                    Object {
                                        class_name: "java/lang/String",
                                    },
                                    Integer,
                                    Object {
                                        class_name: "java/util/Random",
                                    },
                                    Integer,
                                    Integer,
                                ],
                                stack: [],
                            },
                            Same {
                                offset_delta: 26,
                            },
                        ],
                    },
                ),
            },
        ],
        attributes: [
            Attribute {
                name: "SourceFile",
                data: [
                    0,
                    99,
                ],
            },
            Attribute {
                name: "BootstrapMethods",
                data: [
                    0,
                    5,
                    0,
                    101,
                    0,
                    1,
                    0,
                    107,
                    0,
                    101,
                    0,
                    1,
                    0,
                    109,
                    0,
                    101,
                    0,
                    1,
                    0,
                    111,
                    0,
                    101,
                    0,
                    1,
                    0,
                    113,
                    0,
                    101,
                    0,
                    1,
                    0,
                    115,
                ],
            },
            Attribute {
                name: "InnerClasses",
                data: [
                    0,
                    1,
                    0,
                    118,
                    0,
                    120,
                    0,
                    122,
                    0,
                    25,
                ],
            },
        ],
    },
)
